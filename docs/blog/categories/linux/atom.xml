<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Chun Sing Tsui]]></title>
  <link href="http://www.cstsui.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://www.cstsui.com/"/>
  <updated>2020-07-16T06:29:00-04:00</updated>
  <id>http://www.cstsui.com/</id>
  <author>
    <name><![CDATA[Chun Sing Tsui]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Commonly Used Commands]]></title>
    <link href="http://www.cstsui.com/blog/2020/03/31/handy-commands/"/>
    <updated>2020-03-31T18:12:00-04:00</updated>
    <id>http://www.cstsui.com/blog/2020/03/31/handy-commands</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s a short cheatsheet for some useful commands when working with Linux/Unix systems.</p>

<p>Get specific column using <code>cut</code>. Tab is the default delimiter in cut</p>

<pre><code class="bash">cat content | cut -d 'delimiter' -f &lt;field number&gt;
</code></pre>

<p>Output specific column using <code>awk</code></p>

<pre><code class="bash">cat content | awk -F/ '{print $1}'
</code></pre>

<p>Base64 encode (-n for no newline)</p>

<pre><code class="bash">echo -n 'admin:password' | base64
</code></pre>

<p>Create gzipped tar</p>

<pre><code class="bash">tar -czvf archive.tgz file1 dir2
</code></pre>

<p>Extract gzipped tar</p>

<pre><code class="bash"># Output dir has to exist
tar -xzvf archive.tgz -C targetdir
</code></pre>

<p>Listening ports
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo netstat -plnt&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;or&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;sudo lsof -i -P <span class="p">|</span> grep -i <span class="p">&amp;</span>lsquo<span class="p">;</span>listen<span class="p">&amp;</span>rsquo<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Disk usage sorted by size
<code>bash
du -hs * | sort -h
</code></p>

<p>Xargs to pass arguments from stdin</p>

<pre><code>xargs brew install &lt; list.txt
</code></pre>

<p>Heredoc Syntax to create multi-line file from command line</p>

<pre><code class="bash">cat &lt;&lt;EOT &gt; app-pod.yml
apiVersion: v1
kind: Pod
metadata:
  name: my-app-ui
  labels:
    app: my-app
spec:
  containers:
    - name: nginx-server
      image: nginx
EOT
</code></pre>

<p>Working with Docker
```</p>

<h1>Remove stopped containers and all unused images</h1>

<p>docker system prune -a</p>

<h1>Remove certain images</h1>

<p>docker images -a | grep &ldquo;pattern&rdquo; | awk &lsquo;{print $3}&rsquo; | xargs docker rmi</p>

<h1>Remove all images</h1>

<p>docker rmi $(docker images -a -q)</p>

<pre><code>
Working with systemd
</code></pre>

<h1>List all services</h1>

<p>systemctl list-units &ndash;type=service</p>

<h1>Restart</h1>

<p>systemctl restart application.service</p>

<h1>Get logs by the service unit</h1>

<p>journalctl -u nginx.service</p>

<h1>Get data from yesterday</h1>

<p>journalctl &ndash;since yesterday</p>

<h1>Get data from specific timestamps</h1>

<p>journalctl &ndash;since &ldquo;2015-01-10&rdquo; &ndash;until &ldquo;2015-01-11 03:00&rdquo;</p>

<h1>Get log data from previous boot</h1>

<p>journalctl -b -1</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
